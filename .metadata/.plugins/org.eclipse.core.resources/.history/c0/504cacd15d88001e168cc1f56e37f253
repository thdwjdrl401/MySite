package com.example.test.file;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;
 
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.InputStreamResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
 
import jakarta.servlet.ServletContext;
import jakarta.servlet.http.HttpServletRequest;
import com.example.test.file.MediaTypeUtiles;
import com.example.test.file.HumanDto;

@RestController
public class FileController {
	// file upload
	@RequestMapping(value = "/fileUpload", method = RequestMethod.POST)
	public String fileUpload(HumanDto human, @RequestParam("uploadFile") MultipartFile uploadFile,
			HttpServletRequest req) {

		System.out.println("HelloController fileUpload " + new Date());
		System.out.println(human.toString());

		// 경로
		String path = req.getServletContext().getRealPath("/upload"); // 서버에 업로드
//        String path = "c:\temp"; // 폴더에 upload

		String filename = uploadFile.getOriginalFilename(); // 기본 파일명
		String filepath = path + "/" + filename;

		System.out.println(filepath);

		File file = new File(filepath);
		try {
			BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(file));
			bos.write(uploadFile.getBytes());
			bos.close();

		} catch (Exception e) {
			return "file upload fail";
		}
		return "file upload success";

	}

	// file download
	@Autowired
	ServletContext servletContext;

	@RequestMapping(value = "/fileDownload")
	public ResponseEntity<InputStreamResource> download(String filename, HttpServletRequest req) throws Exception {
		System.out.println("HelloController download " + new Date());

		// 경로
		String path = req.getServletContext().getRealPath("/upload");

		MediaType mediaType = MediaTypeUtiles.getMediaTypeForFileName(this.servletContext, filename);
		System.out.println("filename: " + filename);
		System.out.println("mediaType: " + mediaType);

		File file = new File(path + "/" + filename); // filename은 업로드됐을 때의 new filename
//        File file = new File(path + File.separator + filename);

		InputStreamResource isr = new InputStreamResource(new FileInputStream(file));

		// db에서 다운로드 카운트 넣으려면 이 곳에 넣음

		return ResponseEntity.ok().header(HttpHeaders.CONTENT_DISPOSITION, "attachment;filename=" + file.getName()) // file.getName()은
																													// 원본
																													// 파일명
				.contentType(mediaType).contentLength(file.length()).body(isr);
	}
}
